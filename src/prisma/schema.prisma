generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  clerkId    String      @unique @map("clerk_id")
  email      String      @unique
  name       String?
  imageUrl   String?     @map("image_url")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  adAccounts AdAccount[]

  @@map("users")
}

model AdAccount {
  id                  String          @id @default(cuid())
  userId              String          @map("user_id")
  name                String
  currency            String          @default("USD")
  timeZone            String          @default("UTC") @map("time_zone")
  facebookAccessToken String?         @map("facebook_access_token")
  facebookTokenExpiry DateTime?       @map("facebook_token_expiry")
  facebookAdAccountId String?         @map("facebook_ad_account_id")
  facebookUserId      String?         @map("facebook_user_id")
  facebookPageId      String?         @map("facebook_page_id")
  facebookBusinessId  String?         @map("facebook_business_id")
  facebookAccessType  String?         @map("facebook_access_type")
  createdAt           DateTime        @default(now()) @map("created_at")
  updatedAt           DateTime        @updatedAt @map("updated_at")
  platform            Platform        @default(FACEBOOK)
  status              AdAccountStatus @default(ACTIVE)
  lastSyncedAt        DateTime?       @map("last_synced_at")
  syncError           String?         @map("sync_error")
  syncStatus          SyncStatus      @default(IDLE) @map("sync_status")
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaigns           Campaign[]

  @@unique([userId, facebookAdAccountId], name: "unique_user_facebook_account")
  @@index([userId])
  @@index([facebookAdAccountId])
  @@index([facebookBusinessId])
  @@index([lastSyncedAt])
  @@index([status])
  @@index([syncStatus])
  @@index([userId, status])
  @@index([userId, facebookBusinessId])
  @@index([facebookAdAccountId, userId])
  @@map("ad_accounts")
}

model Campaign {
  id                    String                     @id @default(cuid())
  adAccountId           String                     @map("ad_account_id")
  
  // Facebook fields
  facebookCampaignId    String?                    @unique @map("facebook_campaign_id")
  name                  String
  status                CampaignStatus             @default(ACTIVE)
  effectiveStatus       CampaignEffectiveStatus?   @map("effective_status")
  objective             CampaignObjective?
  
  // Budget fields - using Decimal for precision
  spendCap              Decimal?                   @map("spend_cap") @db.Decimal(12, 2)
  dailyBudget           Decimal?                   @map("daily_budget") @db.Decimal(12, 2)
  lifetimeBudget        Decimal?                   @map("lifetime_budget") @db.Decimal(12, 2)
  budgetRemaining       Decimal?                   @map("budget_remaining") @db.Decimal(12, 2)
  budget                Float                      // Legacy field - kept for backward compatibility
  
  // Metrics (cached from insights)
  spent                 Decimal                    @default(0) @db.Decimal(12, 2)
  impressions           BigInt                     @default(0)
  clicks                BigInt                     @default(0)
  reach                 BigInt?                    @default(0)
  frequency             Decimal?                   @db.Decimal(10, 4)
  ctr                   Decimal                    @default(0) @db.Decimal(10, 4)
  cpc                   Decimal?                   @db.Decimal(10, 4)
  cpm                   Decimal?                   @db.Decimal(10, 4)
  conversions           Int                        @default(0)
  costPerConversion     Decimal                    @default(0) @map("cost_per_conversion") @db.Decimal(10, 4)
  
  // Timestamps
  createdAt             DateTime                   @default(now()) @map("created_at")
  updatedAt             DateTime                   @updatedAt @map("updated_at")
  facebookCreatedTime   DateTime?                  @map("facebook_created_time")
  facebookUpdatedTime   DateTime?                  @map("facebook_updated_time")
  startTime             DateTime?                  @map("start_time")
  stopTime              DateTime?                  @map("stop_time")
  lastSyncedAt          DateTime?                  @map("last_synced_at")
  dateStart             DateTime                   @map("date_start")
  dateEnd               DateTime                   @map("date_end")
  
  // Additional Facebook fields
  bidStrategy           String?                    @map("bid_strategy")
  specialAdCategories   String[]                   @map("special_ad_categories")
  
  // Relations
  adAccount             AdAccount                  @relation(fields: [adAccountId], references: [id], onDelete: Cascade)
  adGroups              AdGroup[]
  
  @@index([adAccountId])
  @@index([facebookCampaignId])
  @@index([status])
  @@index([effectiveStatus])
  @@index([lastSyncedAt])
  @@index([adAccountId, status])
  @@index([adAccountId, lastSyncedAt])
  @@index([adAccountId, facebookCampaignId])
  @@index([dateStart, dateEnd])
  @@index([adAccountId, dateStart, dateEnd])
  @@map("campaigns")
}

model AdGroup {
  id                    String                  @id @default(cuid())
  campaignId            String                  @map("campaign_id")
  
  // Facebook fields
  facebookAdSetId       String?                 @unique @map("facebook_adset_id")
  name                  String
  status                AdSetStatus             @default(ACTIVE)
  effectiveStatus       AdSetEffectiveStatus?   @map("effective_status")
  
  // Budget & Bidding - using Decimal for precision
  dailyBudget           Decimal?                @map("daily_budget") @db.Decimal(12, 2)
  lifetimeBudget        Decimal?                @map("lifetime_budget") @db.Decimal(12, 2)
  budgetRemaining       Decimal?                @map("budget_remaining") @db.Decimal(12, 2)
  bidAmount             Decimal?                @map("bid_amount") @db.Decimal(12, 2)
  billingEvent          String?                 @map("billing_event")
  optimizationGoal      String?                 @map("optimization_goal")
  budget                Float                   // Legacy field - kept for backward compatibility
  
  // Targeting (stored as JSON)
  targeting             Json?
  
  // Metrics (cached from insights)
  spent                 Decimal                 @default(0) @db.Decimal(12, 2)
  impressions           BigInt                  @default(0)
  clicks                BigInt                  @default(0)
  reach                 BigInt?                 @default(0)
  ctr                   Decimal                 @default(0) @db.Decimal(10, 4)
  cpc                   Decimal                 @default(0) @db.Decimal(10, 4)
  cpm                   Decimal?                @db.Decimal(10, 4)
  conversions           Int                     @default(0)
  
  // Timestamps
  createdAt             DateTime                @default(now()) @map("created_at")
  updatedAt             DateTime                @updatedAt @map("updated_at")
  facebookCreatedTime   DateTime?               @map("facebook_created_time")
  facebookUpdatedTime   DateTime?               @map("facebook_updated_time")
  startTime             DateTime?               @map("start_time")
  endTime               DateTime?               @map("end_time")
  lastSyncedAt          DateTime?               @map("last_synced_at")
  dateStart             DateTime                @map("date_start")
  dateEnd               DateTime                @map("date_end")
  
  // Relations
  campaign              Campaign                @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  creatives             Creative[]
  
  @@index([campaignId])
  @@index([facebookAdSetId])
  @@index([status])
  @@index([effectiveStatus])
  @@index([lastSyncedAt])
  @@index([campaignId, status])
  @@index([campaignId, facebookAdSetId])
  @@index([dateStart, dateEnd])
  @@index([campaignId, dateStart, dateEnd])
  @@map("ad_groups")
}

model Creative {
  id           String         @id @default(cuid())
  adGroupId    String         @map("ad_group_id")
  name         String
  format       String
  impressions  Int            @default(0)
  clicks       Int            @default(0)
  ctr          Float          @default(0)
  engagement   Float          @default(0)
  spend        Float          @default(0)
  roas         Float          @default(0)
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  facebookAdId String?        @unique @map("facebook_ad_id")
  lastSyncedAt DateTime?      @map("last_synced_at")
  status       CreativeStatus @default(ACTIVE)
  dateStart    DateTime       @map("date_start")
  dateEnd      DateTime       @map("date_end")
  adGroup      AdGroup        @relation(fields: [adGroupId], references: [id], onDelete: Cascade)

  @@index([adGroupId])
  @@index([facebookAdId])
  @@index([lastSyncedAt])
  @@index([status])
  @@index([adGroupId, status])
  @@index([adGroupId, facebookAdId])
  @@index([dateStart, dateEnd])
  @@index([adGroupId, dateStart, dateEnd])
  @@map("creatives")
}

enum AdAccountStatus {
  ACTIVE
  PAUSED
  DISABLED
}

enum Platform {
  FACEBOOK
  INSTAGRAM
  LINKEDIN
  MESSENGER
}

enum SyncStatus {
  IDLE
  SYNCING
  ERROR
}

enum CampaignStatus {
  ACTIVE
  PAUSED
  DELETED
  ARCHIVED
  PENDING
  ENDED
  DISAPPROVED
  REMOVED
}

enum AdSetStatus {
  ACTIVE
  PAUSED
  DELETED
  ARCHIVED
  PENDING
  ENDED
}

enum CreativeStatus {
  ACTIVE
  PAUSED
  DELETED
  ARCHIVED
  PENDING
  REVIEW
  REJECTED
  DISAPPROVED
}

enum CampaignEffectiveStatus {
  ACTIVE
  PAUSED
  DELETED
  PENDING_REVIEW
  DISAPPROVED
  PREAPPROVED
  PENDING_BILLING_INFO
  CAMPAIGN_PAUSED
  ARCHIVED
  ADSET_PAUSED
  IN_PROCESS
  WITH_ISSUES
}

enum AdSetEffectiveStatus {
  ACTIVE
  PAUSED
  DELETED
  PENDING_REVIEW
  DISAPPROVED
  PREAPPROVED
  PENDING_BILLING_INFO
  CAMPAIGN_PAUSED
  ARCHIVED
  ADSET_PAUSED
}

enum CampaignObjective {
  APP_INSTALLS
  BRAND_AWARENESS
  CONVERSIONS
  EVENT_RESPONSES
  LEAD_GENERATION
  LINK_CLICKS
  MESSAGES
  OUTCOME_AWARENESS
  OUTCOME_ENGAGEMENT
  OUTCOME_LEADS
  OUTCOME_SALES
  OUTCOME_TRAFFIC
  PAGE_LIKES
  POST_ENGAGEMENT
  PRODUCT_CATALOG_SALES
  REACH
  STORE_VISITS
  VIDEO_VIEWS
}
